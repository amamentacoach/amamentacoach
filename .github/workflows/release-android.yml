name: Build Android and create releases.

on:
  push:
    tags:
      - "v*" # Push events matching v*, i.e. v1.0, v20.15.10

defaults:
  run:
    working-directory: mobile

jobs:
  setup:
    name: Setup build
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.version.outputs.tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set release name using tag
        id: version
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

      - name: Cache files
        uses: actions/cache@v2
        id: cache-node-modules
        with:
          path: mobile/node_modules
          key: node-modules-${{ hashFiles('mobile/yarn.lock') }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - name: Check for linting errors
        run: yarn lint

  build-github-release:
    needs: setup
    name: Create Github release APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/cache@v2
        id: cache-node-modules
        with:
          path: mobile/node_modules
          key: node-modules-${{ hashFiles('mobile/yarn.lock') }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - name: Create release.keystore
        run: base64 -di <<< ${{ secrets.RELEASE_KEYSTORE_BASE64 }} > "./android/app/release.keystore"

      - name: Create release.properties
        run: printf 'STORE_FILE=release.keystore\nSTORE_PASSWORD=%s\nKEY_ALIAS=%s\nKEY_PASSWORD=%s\n' ${{ secrets.STORE_PASSWORD }} ${{ secrets.KEY_ALIAS }} ${{ secrets.KEY_PASSWORD }} > "./android/release.properties"

      - name: Build Android release APK
        run: yarn run android:assemble:production

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.setup.outputs.tag }}
          release_name: ${{ needs.setup.outputs.tag }}
          draft: false
          prerelease: false

      - name: Upload release apk to github
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: mobile/android/app/build/outputs/apk/release/amamentacoach-${{ needs.setup.outputs.tag }}-production-release.apk
          asset_name: amamentacoach-${{ needs.setup.outputs.tag }}.apk
          asset_content_type: application/zip

  build-play-store-release:
    needs: setup
    name: Create Play Store release bundle
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/cache@v2
        id: cache-node-modules
        with:
          path: mobile/node_modules
          key: node-modules-${{ hashFiles('mobile/yarn.lock') }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - name: Create release.keystore
        run: base64 -di <<< ${{ secrets.RELEASE_KEYSTORE_BASE64 }} > "./android/app/release.keystore"

      - name: Create release.properties
        run: printf 'STORE_FILE=release.keystore\nSTORE_PASSWORD=%s\nKEY_ALIAS=%s\nKEY_PASSWORD=%s\n' ${{ secrets.STORE_PASSWORD }} ${{ secrets.KEY_ALIAS }} ${{ secrets.KEY_PASSWORD }} > "./android/release.properties"

      - name: Build Android release bundle
        run: yarn run android:bundle:production

      - name: Upload release apk to Play Store
        uses: r0adkll/upload-google-play@v1.0.15
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT }}
          packageName: com.amamentacoach
          releaseFiles: mobile/android/app/build/outputs/bundle/release/amamentacoach-${{ needs.setup.outputs.tag }}-production-release.aab
          track: production

